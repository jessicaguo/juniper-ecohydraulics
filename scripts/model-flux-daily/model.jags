model{
  for(i in 1:N){
    # Likelihood
    ET[i] ~ dnorm(mu[i], tau)
    ET.rep[i] ~ dnorm(mu[i], tau)
    
    # Mean model
    mu[i] <- B[1] + 
      B[2] * W5ant[i] +
      B[3] * PDant[i] +
      B[4] * Dant[i] +
      B[5] * W5ant[i] * PDant[i] +
      B[6] * W5ant[i] * Dant[i] +
      B[7] * PDant[i] * Dant[i]
    
    # Antecedent variable is the sum across all timesteps
    W5ant[i] <- sum(w5Temp[i,])
    PDant[i] <- sum(PDTemp[i,])
    Dant[i] <- sum(DTemp[i,])
    
    # Multiply weight by each timestep of covariate
    # Indexing tricks used to accomodate flexible time step size pA - pC
    # Time steps for PDant are offset by nlagA
    
    for(k in 1:nlagA){
      w5Temp[i,k] <- mean(VWC5[(doy[i]-k*pA+1):(doy[i]-k*pA+pA)])*wA[k]
    }
    
    #for(k in 1:nlagB){
      #PDTemp[i,k] <- mean(PD[(doy[i]-k*pB+1):(doy[i]-k*pB+pB)])*wB[k]
    #}
    
    for(k in 1:nlagB){
      PDTemp[i,k] <- mean(PD[(doy[i]-k*pB+1-nlagA):(doy[i]-k*pB+pB-nlagA)])*wB[k]
    }
    
    for(k in 1:nlagC){
      DTemp[i,k] <- mean(Dmax[(doy[i]-k*pC+1):(doy[i]-k*pC+pC)])*wC[k]
    }
    
    
    # Part of the calculation of the posterior predictive loss	
    Sqdiff[i] <- pow(ET.rep[i] - ET[i],2)
  }
  # Sum of the deltas for each covariate
  sumA <- sum(deltaA[])
  sumB <- sum(deltaB[])
  sumC <- sum(deltaC[])

  # Priors for weights using the delta trick
  # Daily variable weights
  for(k in 1:nlagA){
    wA[k] <- deltaA[k] / sumA
    deltaA[k] ~ dgamma(alphaA[k], 1)
  }
  
  for(k in 1:nlagB){
    wB[k] <- deltaB[k] / sumB
    deltaB[k] ~ dgamma(alphaB[k], 1)
  }
  
  for(k in 1:nlagC){
    wC[k] <- deltaC[k] / sumC
    deltaC[k] ~ dgamma(alphaC[k], 1)
  }
  
  # Normal priors for regression parameters
  for(j in 1:NParam) { # Number of parameters in linear models
    B[j] ~ dnorm(0, 0.001)
  }
  
  # Priors for variance terms
  tau ~ dgamma(0.1, 0.1)
  sig <- pow(tau, -0.5)
    
  # Posterior predictive loss is the posterior mean of Dsum
  Dsum <- sum(Sqdiff[])
}
